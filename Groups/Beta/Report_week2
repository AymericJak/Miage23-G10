Quentin : 

Je me suis concentré sur la recherche dans la librairie des AVL car je connaissais déjà le principe et donc la seule difficulté était l'appréhension du Pharo.
Je me suis très vite rendu compte que j'avais installé Pharo 10.0 au lieu de 11.0, et par conséquent je n'avais pas la visualisation des arbres built-in.
J'ai donc essayé d'appeler par moi même la fonction (renderIn) qui permettrait de visualiser un arbre sur un playground, et je suis arrivé au résultat suivant : 

|myTree displayer|

displayer := AVLTreeVisualizer new.

myTree := AVLTree new.
myTree addAll: { 7. 8. 78 }.
myTree.


displayer tree: myTree.
displayer .
displayer renderIn: inspectorCanvas .


Ce bout de code ne fonctionne toujours pas mais j'ai résolu quelques problèmes que j'avais initialement.
J'ai mis énormément de temps à comprendre comment créer un AVL de moi-même mais j'ai finalement compris en regardant le set up des différents tests.
Regarder la manière dont sont écrites les tests m'a beaucoup aidé de manière générale, c'est notamment grâce à cela que j'ai compris qu'il fallait créer un visualize d'AVL et lui asssigner un arbre.
Finalement, j'ai une erreur où le canevas n'arriverait pas à ajouter les noueds de l'arbre (et ce n'est pas la version j'ai la même erreur en 11.0), 
erreur que je n'arrive à comprendre et à fixer même avec les tests et la documentation.

Mohoammad Javad : 

J'ai lu sur AVL Tree, pour que je trouve à quoi ça sert, j'ai révisé le cours de la semaine dernière sur le dispatching.
Puis, j'ai essayé d'écrire le test sur look up. J'ai bien réussi d'écrire un test mais j'arrive pas à trouver comment je peu faire une hiérachie dans mes classes.

